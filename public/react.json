{
  "react/boolean-prop-naming": {
    "name": "react/boolean-prop-naming",
    "value": "off",
    "description": "布尔值类型的 propTypes 的 name 必须为 is 或 has 开头",
    "reason": "类型相关的约束交给 TypeScript",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/button-has-type": {
    "name": "react/button-has-type",
    "value": "off",
    "description": "<button> 必须有 type 属性",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/default-props-match-prop-types": {
    "name": "react/default-props-match-prop-types",
    "value": "off",
    "description": "一个 defaultProps 必须有对应的 propTypes",
    "reason": "类型相关的约束交给 TypeScript",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/destructuring-assignment": {
    "name": "react/destructuring-assignment",
    "value": "off",
    "description": "props, state, context 必须用解构赋值",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/display-name": {
    "name": "react/display-name",
    "value": "off",
    "description": "组件必须有 displayName 属性",
    "reason": "不强制要求写 displayName",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/forbid-component-props": {
    "name": "react/forbid-component-props",
    "value": "off",
    "description": "禁止在自定义组件中使用指定的 props",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/forbid-dom-props": {
    "name": "react/forbid-dom-props",
    "value": "off",
    "description": "禁止在 dom 组件中使用指定的 props",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/forbid-elements": {
    "name": "react/forbid-elements",
    "value": "off",
    "description": "禁止使用指定的组件",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/forbid-foreign-prop-types": {
    "name": "react/forbid-foreign-prop-types",
    "value": "off",
    "description": "禁止使用另一个组件的 propTypes",
    "reason": "类型相关的约束交给 TypeScript",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/forbid-prop-types": {
    "name": "react/forbid-prop-types",
    "value": "off",
    "description": "禁止使用 PropTypes.any PropTypes.array 和 PropTypes.object",
    "reason": "类型相关的约束交给 TypeScript",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/function-component-definition": {
    "name": "react/function-component-definition",
    "value": "off",
    "description": "限制函数式组件的函数形式（函数声明、函数表达式或箭头函数）",
    "reason": "一些场景还不能覆盖，如 export default function，自动修复功能在 ts 中有些问题",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/hook-use-state": {
    "name": "react/hook-use-state",
    "value": "off",
    "description": "hook 的返回值必须与 useState 的解构对应",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/iframe-missing-sandbox": {
    "name": "react/iframe-missing-sandbox",
    "value": "error",
    "description": "iframe 组件必须添加 sandbox 属性",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-boolean-value": {
    "name": "react/jsx-boolean-value",
    "value": "off",
    "description": "布尔值的属性必须显式的声明值为 true",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-curly-brace-presence": {
    "name": "react/jsx-curly-brace-presence",
    "value": ["error", { "props": "never", "children": "never", "propElementValues": "always" }],
    "description": "禁止 jsx 中使用无用的引号",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-filename-extension": {
    "name": "react/jsx-filename-extension",
    "value": "off",
    "description": "限制文件后缀",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-fragments": {
    "name": "react/jsx-fragments",
    "value": ["error", "syntax"],
    "description": "必须使用 <></> 而不是 React.Fragment",
    "reason": "<></> 不需要额外引入 Fragment 组件",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-handler-names": {
    "name": "react/jsx-handler-names",
    "value": "off",
    "description": "handler 的名称必须是 onXXX 或 handleXXX",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-key": {
    "name": "react/jsx-key",
    "value": ["error", { "checkFragmentShorthand": true }],
    "description": "数组中的 jsx 必须有 key",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-max-depth": {
    "name": "react/jsx-max-depth",
    "value": "off",
    "description": "限制 jsx 层级",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-bind": {
    "name": "react/jsx-no-bind",
    "value": "off",
    "description": "jsx 中禁止使用 bind",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-comment-textnodes": {
    "name": "react/jsx-no-comment-textnodes",
    "value": "error",
    "description": "禁止在 jsx 中使用像注释的字符串",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-constructed-context-values": {
    "name": "react/jsx-no-constructed-context-values",
    "value": "error",
    "description": "禁止使用不稳定的值作为 Context.Provider 的 value",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-duplicate-props": {
    "name": "react/jsx-no-duplicate-props",
    "value": "error",
    "description": "禁止出现重复的 props",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-leaked-render": {
    "name": "react/jsx-no-leaked-render",
    "value": "off",
    "description": "使用 && 渲染组件时，禁止条件是 0 '' 或 NaN",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-literals": {
    "name": "react/jsx-no-literals",
    "value": "off",
    "description": "禁止在 jsx 中出现字符串",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-script-url": {
    "name": "react/jsx-no-script-url",
    "value": "error",
    "description": "禁止出现 href=\"javascript:void(0)\"",
    "reason": "React 已经有 warning 了，并且会在将来禁止此类属性值",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-target-blank": {
    "name": "react/jsx-no-target-blank",
    "value": "off",
    "description": "禁止使用 target=\"_blank\"",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-undef": {
    "name": "react/jsx-no-undef",
    "value": ["error", { "allowGlobals": true }],
    "description": "禁止使用未定义的变量",
    "reason": "全局声明中的除外，兼容如 'unplugin-auto-import' 之类的自动导入插件",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-no-useless-fragment": {
    "name": "react/jsx-no-useless-fragment",
    "value": "error",
    "description": "禁止无意义的 Fragment 组件",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-pascal-case": {
    "name": "react/jsx-pascal-case",
    "value": "error",
    "description": "组件的名称必须符合 PascalCase",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-props-no-spreading": {
    "name": "react/jsx-props-no-spreading",
    "value": "off",
    "description": "禁止使用 {...props}",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-sort-props": {
    "name": "react/jsx-sort-props",
    "value": "off",
    "description": "props 必须按字母排序",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-uses-react": {
    "name": "react/jsx-uses-react",
    "value": "error",
    "description": "修复 React 被误报为未使用的变量的问题（仅在开启 no-unused-vars 时有效）",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/jsx-uses-vars": {
    "name": "react/jsx-uses-vars",
    "value": "error",
    "description": "修复 no-unused-vars 不检查 jsx 的问题",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-access-state-in-setstate": {
    "name": "react/no-access-state-in-setstate",
    "value": "off",
    "description": "禁止在 setState 中使用 this.state",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-adjacent-inline-elements": {
    "name": "react/no-adjacent-inline-elements",
    "value": "off",
    "description": "两个 inline 元素之间必须有空格，否则视觉上它们就贴在一起了",
    "reason": "这是样式的问题，不应该由空格约束",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-array-index-key": {
    "name": "react/no-array-index-key",
    "value": "off",
    "description": "禁止使用数组的索引作为 key",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-arrow-function-lifecycle": {
    "name": "react/no-arrow-function-lifecycle",
    "value": "off",
    "description": "类组件中的生命周期函数不要使用箭头函数",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-children-prop": {
    "name": "react/no-children-prop",
    "value": "off",
    "description": "禁止将 children 作为一个 prop",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-danger": {
    "name": "react/no-danger",
    "value": "off",
    "description": "禁止使用 dangerouslySetInnerHTML",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-danger-with-children": {
    "name": "react/no-danger-with-children",
    "value": "error",
    "description": "禁止在使用了 dangerouslySetInnerHTML 的组件内添加 children",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-deprecated": {
    "name": "react/no-deprecated",
    "value": "error",
    "description": "禁止使用已废弃的 api",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-did-mount-set-state": {
    "name": "react/no-did-mount-set-state",
    "value": "off",
    "description": "禁止在 componentDidMount 里使用 setState",
    "reason": "同构应用需要在 didMount 里使用 setState",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-did-update-set-state": {
    "name": "react/no-did-update-set-state",
    "value": "error",
    "description": "禁止在 componentDidUpdate 里使用 setState",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-direct-mutation-state": {
    "name": "react/no-direct-mutation-state",
    "value": "error",
    "description": "禁止直接修改 this.state",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-find-dom-node": {
    "name": "react/no-find-dom-node",
    "value": "error",
    "description": "禁止使用 findDOMNode",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-invalid-html-attribute": {
    "name": "react/no-invalid-html-attribute",
    "value": "off",
    "description": "禁用指定的 html 属性",
    "reason": "需要指定特定属性时才需要开启",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-is-mounted": {
    "name": "react/no-is-mounted",
    "value": "error",
    "description": "禁止使用 isMounted",
    "reason": "它是已废弃的语法",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-multi-comp": {
    "name": "react/no-multi-comp",
    "value": "off",
    "description": "禁止在一个文件创建两个组件",
    "reason": "有一个 bug：https://github.com/yannickcr/eslint-plugin-react/issues/1181",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-namespace": {
    "name": "react/no-namespace",
    "value": "error",
    "description": "禁止在 jsx 中使用命名空间",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-object-type-as-default-prop": {
    "name": "react/no-object-type-as-default-prop",
    "value": "off",
    "description": "在功能性组件中禁止将引用类型变量用作默认参数",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-redundant-should-component-update": {
    "name": "react/no-redundant-should-component-update",
    "value": "error",
    "description": "禁止在 React.PureComponent 中使用 shouldComponentUpdate",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-render-return-value": {
    "name": "react/no-render-return-value",
    "value": "error",
    "description": "禁止使用 ReactDOM.render 的返回值",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-set-state": {
    "name": "react/no-set-state",
    "value": "off",
    "description": "禁止使用 setState",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-string-refs": {
    "name": "react/no-string-refs",
    "value": "error",
    "description": "禁止使用字符串 ref",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-this-in-sfc": {
    "name": "react/no-this-in-sfc",
    "value": "error",
    "description": "禁止在函数组件中使用 this",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-typos": {
    "name": "react/no-typos",
    "value": "error",
    "description": "禁止组件的属性或生命周期大小写错误",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-unescaped-entities": {
    "name": "react/no-unescaped-entities",
    "value": "error",
    "description": "禁止在组件的内部存在未转义的 >, \", ' 或 }",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-unknown-property": {
    "name": "react/no-unknown-property",
    "value": "error",
    "description": "禁止出现 HTML 中的属性，如 class",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-unsafe": {
    "name": "react/no-unsafe",
    "value": ["error", { "checkAliases": true }],
    "description": "禁止使用不安全的生命周期方法 componentWillMount, componentWillReceiveProps, componentWillUpdate",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-unstable-nested-components": {
    "name": "react/no-unstable-nested-components",
    "value": "error",
    "description": "禁止在组件内使用不稳定的组件",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-unused-class-component-methods": {
    "name": "react/no-unused-class-component-methods",
    "value": "off",
    "description": "禁止在类组件中定义未使用的方法",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-unused-prop-types": {
    "name": "react/no-unused-prop-types",
    "value": "off",
    "description": "禁止出现未使用的 propTypes",
    "reason": "类型相关的约束交给 TypeScript",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-unused-state": {
    "name": "react/no-unused-state",
    "value": "off",
    "description": "已定义的 state 必须使用",
    "reason": "没有官方文档，并且存在很多 bug：https://github.com/yannickcr/eslint-plugin-react/search?q=no-unused-state&type=Issues&utf8=%E2%9C%93",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/no-will-update-set-state": {
    "name": "react/no-will-update-set-state",
    "value": "off",
    "description": "禁止在 componentWillUpdate 中使用 setState",
    "reason": "已经禁止使用 componentWillUpdate 了",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/prefer-es6-class": {
    "name": "react/prefer-es6-class",
    "value": ["error", "always"],
    "description": "必须使用 Class 的形式创建组件",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/prefer-exact-props": {
    "name": "react/prefer-exact-props",
    "value": "off",
    "description": "使用 Flow 时，props 必须设置为精确的类型",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/prefer-read-only-props": {
    "name": "react/prefer-read-only-props",
    "value": "off",
    "description": "使用 Flow 时，props 必须设置为只读的",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/prefer-stateless-function": {
    "name": "react/prefer-stateless-function",
    "value": "off",
    "description": "必须使用函数式组件",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/prop-types": {
    "name": "react/prop-types",
    "value": "off",
    "description": "组件必须写 propTypes",
    "reason": "类型相关的约束交给 TypeScript",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/react-in-jsx-scope": {
    "name": "react/react-in-jsx-scope",
    "value": "off",
    "description": "出现 jsx 的地方必须导入 React",
    "reason": "已经在 no-undef 中限制了",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/require-default-props": {
    "name": "react/require-default-props",
    "value": "off",
    "description": "非 required 的 prop 必须有 defaultProps",
    "reason": "类型相关的约束交给 TypeScript",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/require-optimization": {
    "name": "react/require-optimization",
    "value": "off",
    "description": "组件必须有 shouldComponentUpdate",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/require-render-return": {
    "name": "react/require-render-return",
    "value": "error",
    "description": "render 方法中必须有返回值",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/self-closing-comp": {
    "name": "react/self-closing-comp",
    "value": "error",
    "description": "组件内没有 children 时，必须使用自闭和写法",
    "reason": "",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/sort-comp": {
    "name": "react/sort-comp",
    "value": "error",
    "description": "组件内方法必须按照一定规则排序",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/sort-default-props": {
    "name": "react/sort-default-props",
    "value": "off",
    "description": "强制实施 defaultProps 声明按字母顺序排序",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/sort-prop-types": {
    "name": "react/sort-prop-types",
    "value": "off",
    "description": "propTypes 的属性必须按照字母排序",
    "reason": "类型相关的约束交给 TypeScript",
    "fixable": true,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/state-in-constructor": {
    "name": "react/state-in-constructor",
    "value": "off",
    "description": "必须在构造函数中初始化 state",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/static-property-placement": {
    "name": "react/static-property-placement",
    "value": "error",
    "description": "类的静态属性必须使用 static 关键字定义",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/style-prop-object": {
    "name": "react/style-prop-object",
    "value": "error",
    "description": "style 属性的取值必须是 object",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  },
  "react/void-dom-elements-no-children": {
    "name": "react/void-dom-elements-no-children",
    "value": "error",
    "description": "img, br 标签中禁止有 children",
    "reason": "",
    "fixable": false,
    "extendsBaseRule": "",
    "requiresTypeChecking": false
  }
}
